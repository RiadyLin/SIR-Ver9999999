/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * ProductLookupDialog.java
 *
 * Created on Nov 14, 2010, 3:46:07 PM
 */
package com.sumames.sir.ui.report;

import com.sumames.sir.Main;
import com.sumames.sir.entity.AccountChart;
import com.sumames.sir.entity.AccountGroup;
import com.sumames.sir.helper.AppUtil;
import com.sumames.sir.helper.ComponentUtils;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author ifnu
 */
public class AccLookupDialog extends javax.swing.JDialog {

    private AccountChart AccountChart;
    private List<AccountChart> AccountCharts;

    public AccLookupDialog() {
        super(Main.getFrame(), true);
        initComponents();
        setLocationRelativeTo(null);
        tblAccountChart.setAutoCreateColumnsFromModel(false);
        tblAccountChart.getSelectionModel().addListSelectionListener(new AccountChartSelectionListener());
        AccountCharts = AppUtil.getService().getAccountCharts();
        tblAccountChart.setModel(new AccountChartTableModel(AccountCharts));
    }

    public AccountChart getAccountChart() {
        setVisible(true);
        return AccountChart;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAccountChart = new javax.swing.JTable();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);

        jLabel1.setText("Cari");

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        tblAccountChart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Account No", "Account Name", "Account Group Name"
            }
        ));
        tblAccountChart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAccountChartMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblAccountChart);

        btnOk.setText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnCancel.setText("Batal");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearch))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnOk)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOk)
                    .addComponent(btnCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        for (int i = 0; i < tblAccountChart.getRowCount(); i++) {
            String val = tblAccountChart.getValueAt(i, 0).toString();
            String val2 = tblAccountChart.getValueAt(i, 1).toString();
            if (val != null && val.startsWith(txtSearch.getText())) {
                tblAccountChart.getSelectionModel().setSelectionInterval(i, i);
                ComponentUtils.scrollToRect(tblAccountChart, i);
                break;
            }
            if (val2 != null && val2.startsWith(txtSearch.getText())) {
                tblAccountChart.getSelectionModel().setSelectionInterval(i, i);
                ComponentUtils.scrollToRect(tblAccountChart, i);
                break;
            }
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        if (AccountChart != null) {
            dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Pilih satu Chart terlebih dahulu!",
                    "error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        AccountChart = null;
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void tblAccountChartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAccountChartMouseClicked
        if (evt.getClickCount() == 2) {
            if (tblAccountChart.getSelectedRow() >= 0) {
                if (AccountChart != null) {
                    dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Pilih satu Chart terlebih dahulu!",
                            "error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_tblAccountChartMouseClicked

    private class AccountChartSelectionListener implements ListSelectionListener {

        public void valueChanged(ListSelectionEvent e) {
            if (tblAccountChart.getSelectedRow() >= 0) {
                AccountChart = AccountCharts.get(tblAccountChart.getSelectedRow());
            }
        }

    }

    private class AccountChartTableModel extends AbstractTableModel {

        private List<AccountChart> AccountCharts;

        public AccountChartTableModel(List<AccountChart> AccountCharts) {
            this.AccountCharts = AccountCharts;
        }

        public int getRowCount() {
            return AccountCharts.size();
        }

        public int getColumnCount() {
            return 3;
        }

        public Object getValueAt(int rowIndex, int columnIndex) {
            AccountChart p = AccountCharts.get(rowIndex);
            AccountGroup ag = AppUtil.getService().getAccountGroupById(p.getAccountGroupRecordId());
            switch (columnIndex) {
                case 0:
                    return p.getAccountNo();
                case 1:
                    return p.getAccountName();
                case 2:
                    switch (ag.getAccountGroupName()) {
                        case 0:
                            return "Aktiva Lancar";
                        case 1:
                            return "Aktiva Tidak Lancar";
                        case 2:
                            return "Passiva Lancar";
                        case 3:
                            return "Passiva Tidak Lancar";
                        case 4:
                            return "Modal";
                        case 5:
                            return "Pendapatan";
                        case 6:
                            return "Harga Pokok Penjualan";
                        case 7:
                            return "Harga Pokok Produksi";
                        case 8:
                            return "Pembelian";
                        case 9:
                            return "Biaya Operasional";
                        case 10:
                            return "Biaya Produksi";
                        case 11:
                            return "Pajak";
                        case 12:
                            return "Lainnya";
                    }
                default:
                    return "";
            }
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblAccountChart;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

}
